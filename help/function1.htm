<table cellpadding=20 cellspacing=0 border=0><tr><td style="border:0pt"><html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40"><head><title>X-mer算法说明</title><link href="pgstyles.css" type="text/css" rel="stylesheet"/><script language=JavaScript type="text/javascript" src="spage.js"></script><META HTTP-EQUIV="Cache-Control" CONTENT="no-cache"><META HTTP-EQUIV="Pragma" CONTENT="no-cache"><meta http-equiv="expires" content="FRI, 13 APR 1999 01:00:00 GMT"><META name="ROBOTS" content="NOINDEX, NOFOLLOW, NOARCHIVE"><!--[if !mso]><style>v\:* {behavior:url(#default#VML);} o\:* {behavior:url(#default#VML);} w\:* {behavior:url(#default#VML);} .shape {behavior:url(#default#VML);}</style><![endif]--></head><body onload="HighlightSearchText();" leftmargin=2 rightmargin=2 topmargin=2 bottommargin=2> 
<p><font class="navigationcss" color="#cbc9ba" size="1" face="arial"><a href="Welcome.htm?pageid=Welcome">首页</a>&nbsp;&gt;&nbsp;<a href="functions.htm?pageid=functions">背景知识了解</a>&nbsp;&gt;&nbsp;<a href="function1.htm?pageid=function1">X-mer算法说明</a></font></p>
<p><font class="pagetitle" size="4" face="arial">X-mer算法说明</font></p>
<p><font size="4"></font><span style="font-size: large;">以下将分章节详细介绍系统各功能点的操作</span><br style="font-size: large;"><span style="font-size: large;">1.X-mer算法介绍。</span><br style="font-size: large;"><span style="font-size: large;">2.NSH定义。</span><br style="font-size: large;"><span style="font-size: large;">3.CE和LE的交叉反应说明。</span><br style="font-size: large;"><span style="font-size: large;">4.Filtering的说明。</span><br><font size="4"></font><br></p><p style="box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><br><font size="5">X-mer算法</font><br><font size="4">&nbsp; &nbsp; &nbsp; &nbsp; ProbeDesigner软件的核心就是x聚体算法。该算法用于评估和任何通用序列之间的杂交稳定性</font></p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">“x聚体”指的是由算法考虑决定的最小的完美杂交的长度。虽然该程序的默认值是一个4聚体，你可以调整这个参数。 当算法：该x-mer算法开始识别在所选的探针和通用序列之间所有可能产生的x-mer，一个简单的加权方案是用来预测每一个完美的 x-mer混合的稳定性，并为所有的杂交结果总结每个探针与通用序列的交叉反应因子。下面的例子 ：</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">1. 所有的可能的4聚体定义如下:</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><img class="img" src="http://kkds1314-img2.stor.sinaapp.com/MjAxNjEyMjMxNjAxNTY2MTgyNTZfMj.png" style="box-sizing: border-box; border: 0px; vertical-align: middle;"></p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">这里有两个4聚体: TTTC-GAAA and TTCG-CGAA</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">2. 任何一个x聚体 (以一个典型的4聚体为例) 被计算分值通过一个简单的加权方案。</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><img class="img" src="http://kkds1314-img2.stor.sinaapp.com/MjAxNjEyMjMxNjAzMzAwMzUyOTVfMj.png" style="box-sizing: border-box; border: 0px; vertical-align: middle;"></p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">并且 3.所有的4聚体计算分值真多通用探针序列和设计探针交叉反应因子值</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><img class="img" src="http://kkds1314-img2.stor.sinaapp.com/MjAxNjEyMjMxNjA0MTAxMzcyODFfMj.png" style="box-sizing: border-box; border: 0px; vertical-align: middle;"></p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">一旦x聚体算法产生所有可能的通用序列的相互交叉反应的结果，NSH算法调用。</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">1。每个x聚体得分乘以相应的权重因子（1X CE与AP，6X CE放大器的前导，15倍的CE与放大臂）确定探针的NSH评分。有一个结果为每个探针与通用序列的交叉反应。 这个过程是执行一次假设探针是一个CE，一旦假设它是一个LE。在这个例子中，假设我们正在寻找一个ce-amp与所设计探针的交叉反应</p><p align="center" style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><b style="box-sizing: border-box;">NSH 得分 = x-聚体得分 * 权重因子 = 1.375 * 6 =8.25</b></p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);">2. x聚体的分数计算与其他探针NSH相互作用（这意味着x聚体算法也重新的计算探针间的交叉反应）。</p><p style="font-size: large; box-sizing: border-box; margin: 0px 0px 10px; text-indent: 2em; color: rgb(51, 51, 51); font-family: Arial, &quot;Microsoft YaHei&quot;, 黑体, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><img class="img" src="http://kkds1314-img2.stor.sinaapp.com/MjAxNjEyMjMxNjE5MzA3ODIxNjFfNQ.png" style="box-sizing: border-box; border: 0px; vertical-align: middle;"></p><br><p></p>
<p><font class="subheading" color="#cbc9ba" size="3" face="arial">参阅</font></p>
<div class="pagelist"><a href="function1.htm?pageid=function1">X-mer算法说明</a><br><a href="function2.htm?pageid=function2">NSH的定义说明</a><br><a href="3.htm?pageid=3">CE和LE的交叉反应</a><br><a href="6.htm?pageid=6">Filtering功能</a><br></div></body></html></td></tr></table>